import React, { useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import styled from "styled-components";
import { useParams } from "react-router-dom";
import TrendingCard from "../components/TrendingCard";
import NoResults from "../components/NoResults";
import Skeleton from "../skeletons/TrendingSkeleton";
import { getSearchResults, clearSearchResults } from "../reducers/reducers/searchResult";

const StyledChannels = styled.div`
  margin-top: 1rem;
`;

const SearchResults = () => {
  const { searchterm } = useParams();

  const dispatch = useDispatch();
  const { isFetching, videos } = useSelector(
    (state) => state.searchResult
  );

  useEffect(() => {
    dispatch(getSearchResults(searchterm));

    return () => {
      dispatch(clearSearchResults());
    };
  }, [dispatch, searchterm]);

  if (isFetching) {
    return <Skeleton title="true" />;
  }

  if (!isFetching && !videos.length) {
    return <NoResults title="–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ..." text="–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∏—Å–∫–∞—Ç—å –≤ –Ω–∞—à–µ–º —É—é—Ç–Ω–æ–º –¢–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–µ: https://t.me/tiktiktokrobot üòä" />;
  }

  return (
    <StyledTrending>
      <h2>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞</h2>
      <div className='video-grid'>
        {videos.map((video) => (
            <a key={video.id} href={`/watch/${video.id}`}>
              <TrendingCard video={video} />
            </a>
        ))}
      </div>
    </StyledTrending>
  );
};

export default SearchResults;
